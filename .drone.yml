
# Doing this weird stunt (r-devel container for r-release checks)
# to get a container with working LaTeX and checkbashism.
# Would be definitely better to create a custom docker container instead of
# installing Debian and R packages agian and again.

kind: pipeline
name: r-release_via_r-devel

steps:
- name: build 'n check
  image: rocker/r-devel
  commands:
  - apt-get install -t unstable -y --no-install-recommends pandoc qpdf libudunits2-dev libgdal-dev libgeos-dev libproj-dev libssl-dev
  - R -e 'install.packages(c("Rcpp", "sf", "knitr", "rmarkdown"))'
  - R CMD build .
  - FILE=$(ls -1t *.tar.gz | head -n 1)
  - export _R_CHECK_CRAN_INCOMING_=FALSE
  - export _R_CHECK_FORCE_SUGGESTS_=FALSE
  - R CMD check $FILE --as-cran

## Doesn't work at the moment. Missing checkbashism and has LaTeX font problems
#
#kind: pipeline
#name: rocker/geospatial:latest
#
#steps:
#- name: build 'n check
#  image: rocker/geospatial:latest
#  commands:
#  - mkdir ~/.R
#  - echo 'CXX11FLAGS = -g -O2 -Wall -pedantic -fstack-protector-strong -D_FORTIFY_SOURCE=2' > ~/.R/Makevars
#  - R CMD build .
#  - FILE=$(ls -1t *.tar.gz | head -n 1)
#  - export _R_CHECK_CRAN_INCOMING_=FALSE
#  - export _R_CHECK_FORCE_SUGGESTS_=FALSE
#  - R CMD check $FILE --as-cran
#
#---
#
#kind: pipeline
#name: rocker/geospatial:devel
#
#steps:
#- name: build 'n check
#  image: rocker/geospatial:devel
#  commands:
#  - mkdir ~/.R
#  - echo 'CXX11FLAGS = -g -O2 -Wall -pedantic -fstack-protector-strong -D_FORTIFY_SOURCE=2' > ~/.R/Makevars
#  - R CMD build .
#  - FILE=$(ls -1t *.tar.gz | head -n 1)
#  - export _R_CHECK_CRAN_INCOMING_=FALSE
#  - export _R_CHECK_FORCE_SUGGESTS_=FALSE
#  - R CMD check $FILE --as-cran
