[{"path":[]},{"path":"https://rnuske.github.io/apcf/A_Plan_to_drop_GDAL.html","id":"goal-drop-dependency-on-gdal-library","dir":"","previous_headings":"","what":"Goal: Drop dependency on GDAL library","title":"Have a Plan","text":"GDAL library heavy dependency currently totally underutilized turning shapefiles geos geometries. GEOS capable reading WKB. apcf read WKB without depending library. good minimum import feature. Since polygonal input data come many different formats (shapefiles, geopackages, geojson, GML, flatgeobuf, PostGIS EWKT, … ) good intermediary sf. sf package become go place spatial data handling. ’s foundation new spatial packages good interfacing GDAL using full potential. apcf take WKB sf polygons, turn geos geometries return apcf objects maybe sf objects visualization. great depend sf suggest , since sf also big animal.","code":""},{"path":"https://rnuske.github.io/apcf/A_Plan_to_drop_GDAL.html","id":"plan","dir":"","previous_headings":"","what":"Plan","title":"Have a Plan","text":"now think pass geos geometries back R. require passing external pointers back forth, seems easy. memory pointer points must freed R object goes scope. GEOSGeometry needs special handling context stuff. geos package -maybe - funny globale_context object. entirely grok init finish business geos package. sf take external pointer R since holds geometries R objects. think calling R Function pat2dists must figure class geometries deal handle / call appropriate C++-Function. Reading working geometries happens completely within C++.","code":""},{"path":"https://rnuske.github.io/apcf/A_Plan_to_drop_GDAL.html","id":"make-it-work-with-wkb","dir":"","previous_headings":"Plan","what":"Make it work with WKB","title":"Have a Plan","text":"create wkb versions example data adapt wkb reading code package sf (C R code) thoroughly test rip GDAL stuff C++ Code: src/import_export.cpp, src/RcppExports.cpp, src/import_export.h R functions, help pages: R/RcppExports.R, R/pat2dists.R, R/apcf-package.R R helper functions: R/init.R config files, src/Makewars.win, src/Makevars.ucrt, tools/winlibs.R DESCRIPTION README, vignette","code":""},{"path":"https://rnuske.github.io/apcf/A_Plan_to_drop_GDAL.html","id":"notes","dir":"","previous_headings":"Plan > Make it work with WKB","what":"Notes","title":"Have a Plan","text":"borrowing Code package geos work expected design different. don’t want depend geos depends libgeos. way geos library twice: code depending geos library usual place (system dependency) libgeos brings complete geos library via libgeos package","code":""},{"path":"https://rnuske.github.io/apcf/A_Plan_to_drop_GDAL.html","id":"make-it-work-with-sf-objects","dir":"","previous_headings":"Plan","what":"Make it work with sf objects","title":"Have a Plan","text":"adapt sf reading code package sfheaders geos test thoroughly","code":""},{"path":"https://rnuske.github.io/apcf/A_Plan_to_drop_GDAL.html","id":"notes-1","dir":"","previous_headings":"Plan > Make it work with sf objects","what":"Notes","title":"Have a Plan","text":"great depend sf suggest , since sf also big animal. Look geos managed .","code":""},{"path":[]},{"path":"https://rnuske.github.io/apcf/TODO.html","id":"medium-term","dir":"","previous_headings":"","what":"Medium term","title":"ToDo","text":"[ ] look parallelizing C++ part using RcppParallel [ ] allow sf geometries instead importing OGR files [ ] think max_dist kernel bandwidth (xlim <- max_dist - bw/2) [ ] check imported geometries assumptions met [ ] unit testing [X] make compile windows [ ] proper way seeding RNG (check report )","code":""},{"path":"https://rnuske.github.io/apcf/TODO.html","id":"long-term","dir":"","previous_headings":"","what":"Long term","title":"ToDo","text":"[ ] retest influence quad_segs high number (sfr uses 30 default buffer) [ ] think precision wkb/GEOS. look sfr) [ ] figure GEOSGeometries need destroyed () case userInterrupt [ ] Clean (destroy GEOSGeometries) throwing exception calling functions [ ] shall try guess sensible max_dist none provided user? [ ] Think PreparedGeometries [ ] shall allow disjoint study areas?","code":""},{"path":"https://rnuske.github.io/apcf/articles/intro.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Introduction to apcf","text":"method suggested Nuske et al. (2009) requires certain number null models correcting biased PCF constructing pointwise critical envelope. Null models constructed randomly moving (shift rotation) objects within study area. alpha level pointwise critical envelope \\(\\alpha = {n\\_rank * 2} / {n\\_sim + 1}\\) according (Besag Diggle 1977, Buckland 1984, Stoyan Stoyan 1994). edge correction (based Ripley 1981) buffer buffer distance \\(r_{ij}\\) constructed around object pair objects j. object j weighted inverse proportion \\(p_{ij}\\) buffer perimeter within study area. density function frequently used Epanechnikov kernel (Silverman 1986, Stoyan Stoyan 1994) used smoothing PCF. smoothing controlled bandwith parameter \\(\\delta\\) step size r. Penttinen et al. (1992) Stoyan Stoyan (1994) suggest set c aka stoyan-parameter \\(c / {\\sqrt{\\lambda}}\\) 0.1 0.2 \\(\\lambda\\) intensity pattern. separate computationally intensive part (randomization objects calculation proportion buffer inside study area) smoothing PCF use two step approach: calculate distances buffer fractions original randomized patterns turn distances buffer fractions PCF together pointwise critical envelope","code":""},{"path":"https://rnuske.github.io/apcf/articles/intro.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example Data","title":"Introduction to apcf","text":"present workflow make use simulated patterns presented Nuske et al. (2009). Shapefiles WKB representations data part package documented ?sim_patterns. Simulated patterns (: regular, b: random, c: clustered)","code":""},{"path":"https://rnuske.github.io/apcf/articles/intro.html","id":"from-pattern-to-distances","dir":"Articles","previous_headings":"","what":"From Pattern to Distances","title":"Introduction to apcf","text":"pat2dists() calculates distances object pattern closer max_dist determines fraction buffer distance dist inside study area (needed edge correction). randomizes original pattern generate n_sim null models used correcting biased PCF constructing envelope. ’s advised setting n_sim < 199, better still 999 even 9999. returns object class dists containing data.frame columns sim, dist, prop indicator model run (0:n_sim), distances objects patterns, proportion buffer distance dist inside study area. size study area, total number objects, maximum distance passed along well.","code":"# it's advised against setting n_sim < 199 dists <- pat2dists(area=sim_area, pattern=sim_pat_reg,                     max_dist=25, n_sim=9, verbose=FALSE) head(dists) ##   sim     dist     ratio ## 1   0 24.64786 0.9239901 ## 2   0 17.15450 1.0000000 ## 3   0 20.22583 1.0000000 ## 4   0 20.04445 1.0000000 ## 5   0 24.13972 0.9517079 ## 6   0 19.67695 1.0000000"},{"path":"https://rnuske.github.io/apcf/articles/intro.html","id":"from-distances-to-pcf","dir":"Articles","previous_headings":"","what":"From Distances to PCF","title":"Introduction to apcf","text":"dists2pcf() estimates adapted pair correlation function pattern polygons together pointwise critical envelope using kernel methods based distances objects. returns object class fv_pcf containing function values PCF pointwise critical envelope. number null models, rank envelope value among n_sim values bandwith/stoyan parameter passed along.","code":"pcf <- dists2pcf(dists, r=0.2, r_max=25, stoyan=0.15, n_rank=1) head(pcf) ## PCF with pointwise critical envelopes ## Obtained from 9 simulations ## Edge correction: \"Ripley\" ## Alternative: \"two.sided\" ## Significance level of pointwise Monte Carlo test: 0.2 ##  ##     r           g       lwr      upr ## 1 0.2 0.000000000 0.7818624 1.213307 ## 2 0.4 0.000000000 0.7795497 1.224943 ## 3 0.6 0.000000000 0.7938940 1.218255 ## 4 0.8 0.000000000 0.7949296 1.211958 ## 5 1.0 0.005695388 0.7856723 1.206780 ## 6 1.2 0.012901131 0.7743353 1.194961"},{"path":"https://rnuske.github.io/apcf/articles/intro.html","id":"plotting-the-pcf","dir":"Articles","previous_headings":"","what":"Plotting the PCF","title":"Introduction to apcf","text":"plot.fv_pcf() plot method class fv_pcf. draws pair correlation function pointwise critical envelope available.","code":"plot(pcf) # a panel of four plots op <- par(mfrow=c(2,2), oma=c(3,3,0,0), mar=c(0,0,2,2),           mgp=c(2,0.5,0), tcl=-0.3) plot(pcf, xaxis='t', yaxis='o', ann=FALSE) plot(pcf, xaxis='t', yaxis='t', ann=FALSE) plot(pcf, xaxis='o', yaxis='o', ann=FALSE) plot(pcf, xaxis='o', yaxis='t') par(op)"},{"path":"https://rnuske.github.io/apcf/articles/intro.html","id":"technical-details","dir":"Articles","previous_headings":"","what":"Technical Details","title":"Introduction to apcf","text":"adapted pair-corelation functions original implemented Geodatabase PostGIS. PostGIS offers necessary geoprocessing methods easy handle knowing databases SQL. need create lots temporary tables countless transformations geodata WKB stored table GEOS format geometric operations rendered process quite slow. package geometric operations (measuring distances objects, buffers, intersects, randomly moving objects) carried GEOS. geodata read transformed GEOS format . manipulations within GEOS world. usage GEOS library made possible Rcpp.","code":""},{"path":"https://rnuske.github.io/apcf/articles/intro.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to apcf","text":"Besag, J. Diggle, P.J. (1977): Simple Monte Carlo tests spatial pattern. Journal Royal Statistical Society. Series C (Applied Statistics), 26(3): 327–333. Buckland, S.T. (1984): Monte Carlo Confidence Intervals. Biometrics, 40(3): 811–817. Nuske, R.S., Sprauer, S. Saborowski, J. (2009): Adapting pair-correlation function analysing spatial distribution canopy gaps. Forest Ecology Management, 259(1): 107–116. https://doi.org/10.1016/j.foreco.2009.09.050 Ripley, B.D. (1981): Spatial Statistics. John Wiley & Sons, New York. https://doi.org/10.1002/0471725218 Silverman, B.W. (1986): Density Estimation Statistics Data Analysis. Chapman Hall, London. Stoyan, D. Stoyan, H. (1994) Fractals, random shapes point fields: Methods geometrical statistics. John Wiley & Sons, Chichester.","code":""},{"path":"https://rnuske.github.io/apcf/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robert Nuske. Author, maintainer.","code":""},{"path":"https://rnuske.github.io/apcf/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nuske, R.S., Sprauer, S. Saborowski, J. (2009): Adapting pair-correlation function analysing spatial distribution canopy gaps. Forest Ecology Management 259(1): 107–116. https://doi.org/10.1016/j.foreco.2009.09.050","code":"@Article{,   title = {Adapting the pair-correlation function for analysing the spatial distribution of canopy gaps},   author = {Robert S. Nuske and Susanne Sprauer and Joachim Saborowski},   journal = {Forest Ecology and Management},   volume = {259},   number = {1},   pages = {107--116},   year = {2009},   doi = {10.1016/j.foreco.2009.09.050},   url = {https://doi.org/10.1016/j.foreco.2009.09.050}, }"},{"path":"https://rnuske.github.io/apcf/index.html","id":"apcf-adapted-pair-correlation-function","dir":"","previous_headings":"","what":"apcf: Adapted Pair Correlation Function","title":"Adapted Pair Correlation Function","text":"Adapted Pair Correlation Function transfers concept Pair Correlation Function point patterns patterns patches finite size irregular shape (eg. lakes within country). main tasks () construction nullmodels randomizing patches original pattern within study area, (ii) edge correction determining proportion buffer within study area, (iii) calculation shortest distances patches. reimplementation Adapted Pair Correlation Function (Nuske et al. 2009) C++ using GEOS library.","code":""},{"path":"https://rnuske.github.io/apcf/index.html","id":"requirements","dir":"","previous_headings":"apcf: Adapted Pair Correlation Function","what":"Requirements","title":"Adapted Pair Correlation Function","text":"Unix-alikes GEOS (>= 3.4.0) required. Ubuntu bionic (18.04) beyond one can install dependency simply sudo apt install libgeos-dev. earlier Ubuntu version either add ubuntugis-unstable sources.list use command compile GEOS source.","code":""},{"path":"https://rnuske.github.io/apcf/index.html","id":"installation","dir":"","previous_headings":"apcf: Adapted Pair Correlation Function","what":"Installation","title":"Adapted Pair Correlation Function","text":"stable version can installed CRAN development version available Github using package remotes (formerly devtools)","code":"install.packages(\"apcf\") if(!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"rnuske/apcf\")"},{"path":"https://rnuske.github.io/apcf/index.html","id":"usage","dir":"","previous_headings":"apcf: Adapted Pair Correlation Function","what":"Usage","title":"Adapted Pair Correlation Function","text":"","code":"# calculate distances between patches of original pattern and 3 nullmodels # number of nullmodels should by at least 199 and better yet 999 ds <- pat2dists(area=sim_area, pattern=sim_pat_reg, max_dist=25, n_sim=3)  # derive PCF and envelope from distances pcf <- dists2pcf(ds, r=0.2, r_max=25, stoyan=0.15, n_rank=1)  # plot PCF plot(x=pcf, xlim=c(0, 20), ylim=c(0, 2.2))"},{"path":"https://rnuske.github.io/apcf/index.html","id":"links","dir":"","previous_headings":"apcf: Adapted Pair Correlation Function","what":"Links","title":"Adapted Pair Correlation Function","text":"GEOS Rcpp Website R package sf, modern approach geo data R","code":""},{"path":"https://rnuske.github.io/apcf/index.html","id":"references","dir":"","previous_headings":"apcf: Adapted Pair Correlation Function","what":"References","title":"Adapted Pair Correlation Function","text":"Nuske, R.S., Sprauer, S. Saborowski, J. (2009): Adapting pair-correlation function analysing spatial distribution canopy gaps. Forest Ecology Management 259(1): 107–116. https://doi.org/10.1016/j.foreco.2009.09.050","code":""},{"path":"https://rnuske.github.io/apcf/reference/apcf-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Adapted Pair Correlation Function — apcf-package","title":"Adapted Pair Correlation Function — apcf-package","text":"faster implementation adapted Pair Correlation Function presented Nuske et al. (2009) C++ using libraries GEOS GDAL directly instead PostGIS.","code":""},{"path":"https://rnuske.github.io/apcf/reference/apcf-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adapted Pair Correlation Function — apcf-package","text":"Adapted Pair Correlation Function transfers concept Pair Correlation Function point patterns patterns patches finite size irregular shape (eg. lakes within country). main tasks () construction nullmodels rondomizing patches original pattern within study area, (ii) edge correction determining proportion buffer within study area, (iii) calculation shortest distances patches. package mainly provides three functions: create null models calculate distances ratios, turn distances ratios edge corrected PCF, plot Pair Correlation Functions.","code":""},{"path":"https://rnuske.github.io/apcf/reference/apcf-package.html","id":"pattern-to-distances-amp-ratios","dir":"Reference","previous_headings":"","what":"Pattern to Distances & Ratios","title":"Adapted Pair Correlation Function — apcf-package","text":"task consistes two parts: creating null models / permutations calculating distances objects pattern determining fraction perimeter buffer inside study area. Permutations original pattern achieved randomly rotating randomly placing objects within study area without overlap. resulting collection distances ratios null model original pattern returned object class dists (data.frame additional attributes). library GEOS (>= 3.4.0) used geometrical analysis pattern. Geodata converted GEOS Geometries help GDAL/OGR (>= 2.0.1). GEOS functions called C++ Functions integrated R via Rcpp wrapped R function pat2dists().","code":""},{"path":"https://rnuske.github.io/apcf/reference/apcf-package.html","id":"create-an-edge-corrected-pcf","dir":"Reference","previous_headings":"","what":"Create an edge corrected PCF","title":"Adapted Pair Correlation Function — apcf-package","text":"dists objects turned fv_pcf objects function dists2pcf(). C++ function finds distances ratios belonging null model original pattern (marked index 0) calculates density function using Epanechnikov kernel Ripley's edge correction. Resulting many PCFs null models created plus PCF original pattern. PCF null models pointwise critical envelope derived. arithmetic mean PCF null models employed bias correction empirical PCF upper lower bound envelope.","code":""},{"path":"https://rnuske.github.io/apcf/reference/apcf-package.html","id":"plot-a-pcf","dir":"Reference","previous_headings":"","what":"Plot a PCF","title":"Adapted Pair Correlation Function — apcf-package","text":"plot.fv_pcf() S3 method plot function class fv_pcf. provides nice plot empirical PCF together pointwise critical envelope.","code":""},{"path":"https://rnuske.github.io/apcf/reference/apcf-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Adapted Pair Correlation Function — apcf-package","text":"Nuske, R.S., Sprauer, S. Saborowski, J. (2009): Adapting pair-correlation function analysing spatial distribution canopy gaps. Forest Ecology Management, 259(1): 107–116. https://doi.org/10.1016/j.foreco.2009.09.050","code":""},{"path":"https://rnuske.github.io/apcf/reference/dists.html","id":null,"dir":"Reference","previous_headings":"","what":"Class dists: Collection of Distances and Ratios — dists","title":"Class dists: Collection of Distances and Ratios — dists","text":"Advanced Use . low-level function creates object class \"dists\" raw numerical data.","code":""},{"path":"https://rnuske.github.io/apcf/reference/dists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class dists: Collection of Distances and Ratios — dists","text":"","code":"dists(df, area, n_obj, max_dist)  is.dists(obj)"},{"path":"https://rnuske.github.io/apcf/reference/dists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class dists: Collection of Distances and Ratios — dists","text":"df data frame columns sim, dist, ratio containing indicator model run (0:n_sim), distances objects patterns, ratios buffer distance dist inside study area (needed Ripley's edge correction). area size study area square units n_obj number objects pattern max_dist maximum distance measured pattern obj R object, preferably class dists","code":""},{"path":"https://rnuske.github.io/apcf/reference/dists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class dists: Collection of Distances and Ratios — dists","text":"object class dists.","code":""},{"path":"https://rnuske.github.io/apcf/reference/dists2pcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Distances & Ratios to PCF — dists2pcf","title":"Convert Distances & Ratios to PCF — dists2pcf","text":"Estimates adapted Pair Correlation Function (PCF) pattern together pointwise critical envelope based distances ratios calculated pat2dists().","code":""},{"path":"https://rnuske.github.io/apcf/reference/dists2pcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Distances & Ratios to PCF — dists2pcf","text":"","code":"dists2pcf(dists, r, r_max = NULL, kernel = \"epanechnikov\", stoyan, n_rank)"},{"path":"https://rnuske.github.io/apcf/reference/dists2pcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Distances & Ratios to PCF — dists2pcf","text":"dists object class dists. Usually created pat2dists() r step size vector values argument r g(r) evaluated. r_max maximum value argument r. kernel String. Choice smoothing kernel (\"epanechnikov\" kernel currently implemented). stoyan Bandwidth coefficient (smoothing Epanechnikov kernel). Penttinen et al. (1992) Stoyan Stoyan (1994) suggest values 0.1 0.2. n_rank Rank value amongst n_sim simulated values used construct envelope. rank 1 means minimum maximum simulated values used. Must >= 1 < n_sim/2. Determines together n_sim pat2dists() alpha level envelope. alpha n_sim fix, n_rank can calculated (n_sim+1)*alpha/2 eg. (199+1) * 0.05/2 = 5","code":""},{"path":"https://rnuske.github.io/apcf/reference/dists2pcf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Distances & Ratios to PCF — dists2pcf","text":"object class fv_pcf containing function values PCF envelope.","code":""},{"path":"https://rnuske.github.io/apcf/reference/dists2pcf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Distances & Ratios to PCF — dists2pcf","text":"Since pair-correlation function density function, employ frequently used Epanechnikov kernel (Silverman, 1986; Stoyan Stoyan, 1994; Nuske et al., 2009). Epanechnikov kernel weight function putting maximal weight pairs distance exactly equal r also incorporating pairs roughly distance r reduced weight. weight falls zero actual distance points differs r least \\(\\delta\\), -called bandwidth parameter, determines degree smoothness function. Penttinen et al. (1992) Stoyan Stoyan (1994) suggest set c aka stoyan-parameter \\(c / {\\sqrt{\\lambda}}\\) 0.1 0.2 \\(\\lambda\\) intensity pattern. edge correction based suggestions Ripley (1981). pair objects \\(\\) \\(j\\), buffer buffer distance \\(r_{ij}\\) constructed around object \\(\\). object \\(j\\) weighted inverse ratios \\(p_{ij}\\) buffer perimeter within study area. way account reduced probability finding objects close edge study area. alpha level pointwise critical envelope \\(\\alpha = \\frac{n\\_rank * 2}{n\\_sim + 1}\\) according (Besag Diggle, 1977; Buckland, 1984; Stoyan Stoyan, 1994).","code":""},{"path":"https://rnuske.github.io/apcf/reference/dists2pcf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert Distances & Ratios to PCF — dists2pcf","text":"Besag, J. Diggle, P.J. (1977): Simple Monte Carlo tests spatial pattern. Journal Royal Statistical Society. Series C (Applied Statistics), 26(3): 327–333. https://doi.org/10.2307/2346974 Buckland, S.T. (1984). Monte Carlo Confidence Intervals. Biometrics, 40(3): 811-817. https://doi.org/10.2307/2530926 Nuske, R.S., Sprauer, S. Saborowski, J. (2009): Adapting pair-correlation function analysing spatial distribution canopy gaps. Forest Ecology Management, 259(1): 107–116. https://doi.org/10.1016/j.foreco.2009.09.050 Penttinen ., Stoyan D., Henttonen H. M. (1992): Marked point processes forest statistics. Forest Science, 38(4): 806–824. https://doi.org/10.1093/forestscience/38.4.806 Ripley, B.D. (1981): Spatial Statistics. John Wiley & Sons, New York. https://doi.org/10.1002/0471725218 Silverman, B.W. (1986): Density Estimation Statistics Data Analysis. Chapman Hall, London. Stoyan, D. Stoyan, H. (1994) Fractals, random shapes point fields: Methods geometrical statistics. John Wiley & Sons, Chichester.","code":""},{"path":[]},{"path":"https://rnuske.github.io/apcf/reference/dists2pcf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Distances & Ratios to PCF — dists2pcf","text":"","code":"# it's advised against setting n_sim < 199 ds <- pat2dists(area=sim_area, pattern=sim_pat_reg, max_dist=25, n_sim=3)  # derive PCF and envelope pcf <- dists2pcf(ds, r=0.2, r_max=25, stoyan=0.15, n_rank=1)"},{"path":"https://rnuske.github.io/apcf/reference/fv_pcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Class fv_pcf: Function Value Table for PCFs — fv_pcf","title":"Class fv_pcf: Function Value Table for PCFs — fv_pcf","text":"Advanced Use . low-level function creates object class \"fv_pcf\" raw numerical data.","code":""},{"path":"https://rnuske.github.io/apcf/reference/fv_pcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class fv_pcf: Function Value Table for PCFs — fv_pcf","text":"","code":"fv_pcf(df, n_sim, n_rank, correc, kernel, stoyan, bw)  is.fv_pcf(obj)  # S3 method for fv_pcf print(x, ...)  # S3 method for fv_pcf summary(object, ...)"},{"path":"https://rnuske.github.io/apcf/reference/fv_pcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class fv_pcf: Function Value Table for PCFs — fv_pcf","text":"df data frame least 2 columns named 'r' 'g' containing values function argument (r) corresponding values (g). Usually upper 'upr' lower 'lwr' bounds pointwise critical envelope passed along well. n_sim Integer. Number generated simulated patterns used computing envelope n_rank Integer. Rank envelope value amongst n_sim simulated values. rank 1 means minimum maximum simulated values used. correc String. Choice edge correction (eg. \"Ripley\"). kernel String. Choice smoothing kernel (eg. \"epanechnikov\"). stoyan Bandwidth coefficient used smoothing kernel. bw Bandwidth used smoothing kernel. x, obj, object R object, preferably class fv_pcf ... additional parameter","code":""},{"path":"https://rnuske.github.io/apcf/reference/fv_pcf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class fv_pcf: Function Value Table for PCFs — fv_pcf","text":"object class fv_pcf.","code":""},{"path":"https://rnuske.github.io/apcf/reference/pat2dists.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Pattern to Distances & Ratios — pat2dists","title":"Convert a Pattern to Distances & Ratios — pat2dists","text":"Creates n_sim null models permutation original pattern calculates distances object pattern closer max_dist determines fractions perimeter buffers distance dist inside study area (needed edge correction).","code":""},{"path":"https://rnuske.github.io/apcf/reference/pat2dists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Pattern to Distances & Ratios — pat2dists","text":"","code":"pat2dists(   area,   pattern,   max_dist,   n_sim = 199,   max_tries = 1e+05,   save_pattern = FALSE,   verbose = FALSE )"},{"path":"https://rnuske.github.io/apcf/reference/pat2dists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Pattern to Distances & Ratios — pat2dists","text":"area, pattern WKB (list raw vectors) study area pattern. max_dist Maximum distance measured pattern. Usually smaller half diameter study area. n_sim Number simulated patterns (randomizations) generated computing envelope correcting biased empirical pcf. Determines together n_rank dists2pcf() alpha level envelope. alpha n_rank fix, n_sim can calculated (n_rank*2/alpha)-1 instance (5*2/0.05)-1 = 199. max_tries often shall relocation object tried randomizing pattern. save_pattern Shall one simulated pattern returned attributes debugging/later inspections. pattern provided  WKB (list raw vectors) attribute randPattern. verbose Provide progress information console. Roman numerals (x: 10, C: 100, D: 500, M: 1000) indicate progress simulation 'e' denotes empirical PCF.","code":""},{"path":"https://rnuske.github.io/apcf/reference/pat2dists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a Pattern to Distances & Ratios — pat2dists","text":"object class dists. save_pattern = TRUE additional attribute randPattern returned containing WKB (list raw vectors).","code":""},{"path":"https://rnuske.github.io/apcf/reference/pat2dists.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a Pattern to Distances & Ratios — pat2dists","text":"Null models created randomly rotating randomly placing objects within study area without overlap. used correcting biased pcf constructing pointwise critical envelope (cf. Nuske et al. 2009). Measuring distances objects permutation pattern done GEOS.","code":""},{"path":"https://rnuske.github.io/apcf/reference/pat2dists.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert a Pattern to Distances & Ratios — pat2dists","text":"Nuske, R.S., Sprauer, S. Saborowski, J. (2009): Adapting pair-correlation function analysing spatial distribution canopy gaps. Forest Ecology Management, 259(1): 107–116. https://doi.org/10.1016/j.foreco.2009.09.050","code":""},{"path":[]},{"path":"https://rnuske.github.io/apcf/reference/pat2dists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a Pattern to Distances & Ratios — pat2dists","text":"","code":"# it's advised against setting n_sim < 199 ds <- pat2dists(area=sim_area, pattern=sim_pat_reg, max_dist=25, n_sim=3)  # verbose and returns one randomized pattern for debugging ds_plus <- pat2dists(area=sim_area, pattern=sim_pat_reg, max_dist=5, n_sim=3,                      verbose=TRUE, save_pattern=TRUE) #> dists: e  if (FALSE) {   # wk's plot function needs additional package 'vctrs'   plot(attr(ds_plus, \"randPattern\")) }"},{"path":"https://rnuske.github.io/apcf/reference/plot.fv_pcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot PCF — plot.fv_pcf","title":"Plot PCF — plot.fv_pcf","text":"Plot method class \"fv_pcf\". Draws pair correlation function pointwise critical envelope available.","code":""},{"path":"https://rnuske.github.io/apcf/reference/plot.fv_pcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot PCF — plot.fv_pcf","text":"","code":"# S3 method for fv_pcf plot(   x,   xlim = NULL,   ylim = NULL,   xticks = NULL,   yticks = NULL,   xlab = \"r\",   ylab = \"g(r)\",   main = NULL,   sub = NULL,   xaxis = TRUE,   yaxis = TRUE,   ann = graphics::par(\"ann\"),   bty = \"l\",   ... )"},{"path":"https://rnuske.github.io/apcf/reference/plot.fv_pcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot PCF — plot.fv_pcf","text":"x object class fv_pcf. xlim, ylim x y limits plot. NULL indicates range finite values plotted used. xticks, yticks points tick-marks drawn. default (NULL) tickmark locations computed xlab, ylab label x y axis, respectively. main, sub main sub title plot, see also title(). xaxis, yaxis logical value 1-character string giving desired type axis. following values possible: \"n\" FALSE axis, \"t\" ticks , \"f\" TRUE full axis, \"o\" full axis outer margin. ann logical value indicating whether default annotation (title x y axis labels) appear plot. bty character string determines type box drawn plotting region, see par(). ... additional parameter, currently without effect","code":""},{"path":"https://rnuske.github.io/apcf/reference/plot.fv_pcf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot PCF — plot.fv_pcf","text":"object class fv_pcf invisibly.","code":""},{"path":[]},{"path":"https://rnuske.github.io/apcf/reference/plot.fv_pcf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot PCF — plot.fv_pcf","text":"","code":"# it's advised against setting n_sim < 199 ds <- pat2dists(area=sim_area, pattern=sim_pat_reg, max_dist=25, n_sim=3)  # derive PCF and envelope pcf <- dists2pcf(ds, r=0.2, r_max=25, stoyan=0.15, n_rank=1)  # a simple plot plot(x=pcf, xlim=c(0, 20), ylim=c(0, 2.2))   # a panel of four plots op <- par(mfrow=c(2,2), oma=c(3,3,0,0), mar=c(0,0,2,2),           mgp=c(2,0.5,0), tcl=-0.3) plot(pcf, xaxis='t', yaxis='o', ann=FALSE) plot(pcf, xaxis='t', yaxis='t', ann=FALSE) plot(pcf, xaxis='o', yaxis='o', ann=FALSE) plot(pcf, xaxis='o', yaxis='t')  par(op)"},{"path":"https://rnuske.github.io/apcf/reference/sim_patterns.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Patterns (sample data) — sim_patterns","title":"Simulated Patterns (sample data) — sim_patterns","text":"simulated patterns created testing Adapted Pair Correlation Function presented Nuske et al. (2009).","code":""},{"path":"https://rnuske.github.io/apcf/reference/sim_patterns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Patterns (sample data) — sim_patterns","text":"","code":"sim_area  sim_pat_clust  sim_pat_rand  sim_pat_reg"},{"path":"https://rnuske.github.io/apcf/reference/sim_patterns.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Patterns (sample data) — sim_patterns","text":"set WKBs class wk_wkb containing study area three simulated patterns. study area square 100 m x 100 m. set n = 100 objects created latter placed according designated spatial distribution. size distribution shapes objects inspired measurements canopy gaps. areas objects range 1.6 m2 57.7 m2 arithmetic mean 9.7 m2 median 5.5 m2. total area objects 969.7 m2, meaning 9.7% study area covered objects. sim_pat_reg dataset, objects arranged strict regular manner. centric systematic grid constructed, objects set randomly rotated randomly placed locating centroids objects exactly matching randomly numbered grid points, resulting regular arrangement objects constant distance centroids 10 m. sim_pat_rand dataset randomly distributed objects, generated realisation Binomial process intensity 0.01 m^-2, meaning one point per 100 m2. objects randomly rotated numbered objects put matching points centroid close point possible without overlapping objects. sim_pat_clust dataset represents clustered configuration. , first created point pattern 100 points put randomly numbered objects points. point pattern realisation Matern’s cluster process w = 0.0006 m^-2 6 cluster centres per ha, dispersion radius R = 10 m average y = 16.6 points per cluster. used R-package spatstat (Baddeley et al. 2015) simulating Binomial process Matern’s cluster process.","code":""},{"path":"https://rnuske.github.io/apcf/reference/sim_patterns.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated Patterns (sample data) — sim_patterns","text":"Nuske et al. (2009)","code":""},{"path":"https://rnuske.github.io/apcf/reference/sim_patterns.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulated Patterns (sample data) — sim_patterns","text":"Baddeley ., Rubak E. Turner, R. (2015): Spatial Point Patterns: Methodology Applications R. Chapman Hall/CRC, London. https://doi.org/10.1201/b19708 Nuske, R.S., Sprauer, S. Saborowski, J. (2009): Adapting pair-correlation function analysing spatial distribution canopy gaps. Forest Ecology Management, 259(1): 107–116. https://doi.org/10.1016/j.foreco.2009.09.050","code":""},{"path":"https://rnuske.github.io/apcf/reference/sim_patterns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Patterns (sample data) — sim_patterns","text":"","code":"ds <- pat2dists(area=sim_area, pattern=sim_pat_reg, max_dist=25, n_sim=3)"},{"path":"https://rnuske.github.io/apcf/news/index.html","id":"apcf-017904","dir":"Changelog","previous_headings":"","what":"apcf 0.1.7.904","title":"apcf 0.1.7.904","text":"removed dependence GDAL. pat2dists() takes now geometries WKB (using GEOS capabilities). reduced configure code package size significantly. Added package ‘wk’ checking WKBs reading sfc-geometries package ‘sf’ available.","code":""},{"path":"https://rnuske.github.io/apcf/news/index.html","id":"apcf-017","dir":"Changelog","previous_headings":"","what":"apcf 0.1.7","title":"apcf 0.1.7","text":"CRAN release: 2021-10-27 updated message generation configure.ac requested CRAN","code":""},{"path":"https://rnuske.github.io/apcf/news/index.html","id":"apcf-016","dir":"Changelog","previous_headings":"","what":"apcf 0.1.6","title":"apcf 0.1.6","text":"CRAN release: 2021-07-27 Windows: update GDAL 3.2.1 fix UCRT support (thanks @jeroen) drop LazyData description","code":""},{"path":"https://rnuske.github.io/apcf/news/index.html","id":"apcf-015","dir":"Changelog","previous_headings":"","what":"apcf 0.1.5","title":"apcf 0.1.5","text":"CRAN release: 2020-07-05 cleaned configure new maintainer email address due problem email provider","code":""},{"path":"https://rnuske.github.io/apcf/news/index.html","id":"apcf-014","dir":"Changelog","previous_headings":"","what":"apcf 0.1.4","title":"apcf 0.1.4","text":"CRAN release: 2020-02-04 changed configure cater GDAL version 2 3 (thanks package sf)","code":""},{"path":"https://rnuske.github.io/apcf/news/index.html","id":"apcf-013","dir":"Changelog","previous_headings":"","what":"apcf 0.1.3","title":"apcf 0.1.3","text":"CRAN release: 2019-06-13 tweaked makevars.win expectation changes win toolchain (thanks @jeroen)","code":""},{"path":"https://rnuske.github.io/apcf/news/index.html","id":"apcf-012","dir":"Changelog","previous_headings":"","what":"apcf 0.1.2","title":"apcf 0.1.2","text":"CRAN release: 2019-01-17 added configure.ac package source bundle clarified installation stable/development version README special treatment R-devel configure regarding R version check","code":""},{"path":"https://rnuske.github.io/apcf/news/index.html","id":"apcf-011","dir":"Changelog","previous_headings":"","what":"apcf 0.1.1","title":"apcf 0.1.1","text":"CRAN release: 2019-01-11 started using continuous integration tools (Travis, AppVeyor, Drone) made build windows cleanup wording","code":""},{"path":"https://rnuske.github.io/apcf/news/index.html","id":"apcf-010","dir":"Changelog","previous_headings":"","what":"apcf 0.1.0","title":"apcf 0.1.0","text":"Intial version. Reimplementation Adapted Pair Correlation Function C++ using GEOS GDAL libraries directly instead PostGIS. Contains mainly functions pat2dists(), dists2pcf(), plot-function.","code":""}]
